[{"title":"interview","date":"2017-04-06T13:46:17.000Z","path":"2017/04/06/interview/","text":"MySQL 添加列，修改列，删除列 ALTER TABLE：添加，修改，删除表的列，约束等表的定义。 查看列：desc 表名;修改表名：alter table t_book rename to bbb;添加列：alter table 表名 add column 列名 varchar(30);删除列：alter table 表名 drop column 列名;修改列名MySQL： alter table bbb change nnnnn hh int;修改列名SQLServer：exec sp_rename’t_student.name’,’nn’,’column’;修改列名Oracle：lter table bbb rename column nnnnn to hh int;修改列属性：alter table t_book modify name varchar(22); windows系统口令配置文件是 c:\\windows\\system32\\config\\SAM选项ABC中的小写boot、password、user是Linux中的文件，大写的D选项SAM是windows下的配置文件SAM(Security Account Manager)安全账号管理器的机制SAM文件即账号密码数据库文件，是windows的用户账户数据库，所有用户的登录名及口令等相关信息都会保存在这个文件中。SAM文件可以认为类似于unix系统中的passwd文件,不过没有unix的passwd文件那么直观，当我们忘记密码的时候，就可以通过删除SAM文件，快速地进入系统。 集线器（物理层）采用的式共享带宽的工作方式， 每个站所能得到的带宽是1Mb/s而交换机（数据链路层）是独享带宽， 每个站所能得到的带宽是10Mb/s。 后缀算式5 3 2+ * 8 2/ -解法：遇到数字就将其压栈，遇到符号就从栈中pop出两个数字运算再压入栈内，最后得到答案 324个元素，分成9块，每块36个元素。查找块平均需要（1+9）/2 =5次, 块内查找元素需要平均（1+36）/2 = 18.5次，共23.5次。已提交纠错。 Struts属于控制层C，负责流程控制，即对模型层M和视图层V的连接，Spring负责业务流转，即中间跑腿的，控制整个框架的管理，Hibernate属于模型层，进行数据库操作的封装 Java中==作用于两个对象表示引用的比较，作用于基本类型表示相等，对象要用。equal ++a increments and then uses the variable.a++ uses and then increments the variable. １,被定义成FINAL的类不能派生子类２,被定义成FINAL的方法不能够被重写 ／／注意！是重写，不是重载３,被声明为FINAL的成员变量一经赋值就不能改变．1.final可以用来修饰类、方法、变量，不能用来抽象类和接口 链接：https://www.nowcoder.com/questionTerminal/27e62c53e79f47b2bc2f2d6590f84f1d?pos=387&amp;orderByHotValue=1来源：牛客网 构造方法是一种特殊的方法，具有以下特点。 （1）构造方法的方法名必须与类名相同。 （2）构造方法没有返回类型，也不能定义为void，在方法名前面不声明方法类型。 （3）构造方法的主要作用是完成对象的初始化工作，它能够把定义对象时的参数传给对象的域。 （4）一个类可以定义多个构造方法，如果在定义类时没有定义构造方法，则编译系统会自动插入一个无参数的默认构造器，这个构造器不执行任何代码。 （5）构造方法可以重载，以参数的个数，类型，顺序。 在创建子类的对象时，Java虚拟机首先执行父类的构造方法，然后再执行子类的构造方法。在多级继承的情况下，将从继承树的最上层的父类开始，依次执行各个类的构造方法，这可以保证子类对象从所有直接或间接父类中继承的实例变量都被正确地初始化。super（）必须写在第一行。 链接：https://www.nowcoder.com/questionTerminal/2732166fc5aa4335ae0a4b2085da041c来源：牛客网 首先： 成员方法又称为实例方法 静态方法又称为类方法 其次： a，静态方法中没有this指针 c，可以通过类名作用域的方式调用Class::fun(); d，太绝对化了，在类中申请一个类对象或者参数传递一个对象或者指针都可以调用; 链接：https://www.nowcoder.com/questionTerminal/e515ae7a18924fe3b6952ae7fbb985bc来源：牛客网 1、因为ping的话 后面跟的是地址，所以要先将域名转换为ip地址，即用到了DNS2、获取到ip地址后，在数据链路层是根据MAC地址传输的，所以要用到ARP解析服务，获取到MAC地址 3、ping功能是测试另一台主机是否可达，程序发送一份ICMP回显请求给目标主机，并等待返回ICMP回显应答，（ICMP主要是用于ip主机、路由器之间传递控制信息，控制信息是指网络通不通，主机是否科大） 4、TCP的话，不涉及数据传输，不会用到 n个人每个人都不站在原来的位置的方法数有:f(n)=n!(1/2!-1/3!+1/4!+..+(-1)^n/n!)此公式的推导过程要用到筛法公式,而且推导过程很复杂,除了竞赛高考肯定不会出现,对于n不大于4时可采用枚举法.一般只需记住n不大于5的情况即可f(2)=1,f(3)=2,f(4)=9,f(5)=44此外还有一个简单的公式f(n)={n!/e},{x}表示最接近x的整数,e为自然底数,其值为2.7182818,一般取2.72即可 StringBuilder线程不安全，StringBuffer线程安全效率差，Object+””创建了三个字符串","tags":[]},{"title":"python itertools的使用","date":"2017-03-14T14:00:22.000Z","path":"2017/03/14/python-itertools/","text":"最开始是遇到一个问题，如何在以1file = open(file_address, 'w') 的方法打开的文件中，跳过第一行读取，因为第一行可能是配置信息，或者csv文件的列头信息，需要跳过读取。经过搜索找到了这样的方法:123import itertoolsfor line in itertools.islice(file, 1, None): pass 测试有效。python中的itertools模块内置一系列的迭代器创建函数，详细：Python：itertools模块python itertools的使用","tags":[{"name":"Q&amp;A","slug":"Q-amp-A","permalink":"http://yoursite.com/tags/Q-amp-A/"},{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"Hexo主题yilia","date":"2017-03-14T13:53:55.000Z","path":"2017/03/14/theme-yilia/","text":"Hexo主题yilia喜欢这个主题的原因是头像框是圆形的，配我的头像很好看~（虽然可以改主题的css文件，不过太麻烦了）yilia的缺点，或者说与其他主题不同是它没有catagory，不过用多个tag也可以解决，不算什么大事~","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"JAVA的Random类[转]","date":"2017-03-02T14:41:12.000Z","path":"2017/03/02/java-random/","text":"转自JAVA的Random类[转] 用法 Random对象的生成 12Random r1 = new Random();Random r2 = new Random(10); //参数表述种子数 Random类常用方法 12345public boolean nextBoolean() //生成一个随机的boolean值public double nextDouble() //生成一个[0,1.0)之间的随机double值public int nextInt() //生成一个随机的int值public int nextInt(int n) //生成一个[0,n)之间的随机int值public void setSeed(long seed) //重设种子数 注意 相同种子数的Random对象，相同次数生成的随机数字是完全相同的。","tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"Q&amp;A","slug":"Q-amp-A","permalink":"http://yoursite.com/tags/Q-amp-A/"}]},{"title":"第一篇文章","date":"2017-02-05T14:15:32.000Z","path":"2017/02/05/first/","text":"Hexo + Github Pages搭建教程手把手教你使用Hexo + Github Pages搭建个人独立博客如何搭建一个独立博客——简明Github Pages与Hexo教程一步步在GitHub上创建博客主页","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]}]