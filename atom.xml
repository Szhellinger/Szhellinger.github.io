<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello, World!</title>
  <subtitle>Schell&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-04-06T14:52:16.128Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Schell</name>
    <email>zouhe@sjtu.edu.cn</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>interview</title>
    <link href="http://yoursite.com/2017/04/06/interview/"/>
    <id>http://yoursite.com/2017/04/06/interview/</id>
    <published>2017-04-06T13:46:17.000Z</published>
    <updated>2017-04-06T14:52:16.128Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>MySQL 添加列，修改列，删除列</li>
</ol>
<p>ALTER TABLE：添加，修改，删除表的列，约束等表的定义。</p>
<p>查看列：desc 表名;<br>修改表名：alter table t_book rename to bbb;<br>添加列：alter table 表名 add column 列名 varchar(30);<br>删除列：alter table 表名 drop column 列名;<br>修改列名MySQL： alter table bbb change nnnnn hh int;<br>修改列名SQLServer：exec sp_rename’t_student.name’,’nn’,’column’;<br>修改列名Oracle：lter table bbb rename column nnnnn to hh int;<br>修改列属性：alter table t_book modify name varchar(22);</p>
<ol>
<li><p>windows系统口令配置文件是 c:\windows\system32\config\SAM<br>选项ABC中的小写boot、password、user是Linux中的文件，大写的D选项SAM是windows下的配置文件<br>SAM(Security Account Manager)安全账号管理器的机制<br>SAM文件即账号密码数据库文件，是windows的用户账户数据库，所有用户的登录名及口令等相关信息都会保存在这个文件中。<br>SAM文件可以认为类似于unix系统中的passwd文件,不过没有unix的passwd文件那么直观，当我们忘记密码的时候，就可以通过删除SAM文件，快速地进入系统。</p>
</li>
<li><p>集线器（物理层）采用的式共享带宽的工作方式， 每个站所能得到的带宽是1Mb/s<br>而交换机（数据链路层）是独享带宽， 每个站所能得到的带宽是10Mb/s。</p>
</li>
<li><p>后缀算式5  3  2+ * 8 2/ -<br>解法：遇到数字就将其压栈，遇到符号就从栈中pop出两个数字运算再压入栈内，最后得到答案</p>
</li>
<li><p>324个元素，分成9块，每块36个元素。查找块平均需要（1+9）/2 =5次, 块内查找元素需要平均（1+36）/2 = 18.5次，共23.5次。已提交纠错。</p>
</li>
<li><p>Struts属于控制层C，负责流程控制，即对模型层M和视图层V的连接，Spring负责业务流转，即中间跑腿的，控制整个框架的管理，Hibernate属于模型层，进行数据库操作的封装</p>
</li>
<li><p>Java中==作用于两个对象表示引用的比较，作用于基本类型表示相等，对象要用。equal</p>
</li>
<li><p>++a increments and then uses the variable.<br>a++ uses and then increments the variable.</p>
</li>
<li><p>１,被定义成FINAL的类不能派生子类<br>２,被定义成FINAL的方法不能够被重写　　／／注意！是重写，不是重载<br>３,被声明为FINAL的成员变量一经赋值就不能改变．<br>1.final可以用来修饰类、方法、变量，不能用来抽象类和接口</p>
</li>
<li><p>链接：<a href="https://www.nowcoder.com/questionTerminal/27e62c53e79f47b2bc2f2d6590f84f1d?pos=387&amp;orderByHotValue=1" target="_blank" rel="external">https://www.nowcoder.com/questionTerminal/27e62c53e79f47b2bc2f2d6590f84f1d?pos=387&amp;orderByHotValue=1</a><br>来源：牛客网</p>
</li>
</ol>
<p>构造方法是一种特殊的方法，具有以下特点。<br>  （1）构造方法的方法名必须与类名相同。<br>  （2）构造方法没有返回类型，也不能定义为void，在方法名前面不声明方法类型。<br>  （3）构造方法的主要作用是完成对象的初始化工作，它能够把定义对象时的参数传给对象的域。 </p>
<p>  （4）一个类可以定义多个构造方法，如果在定义类时没有定义构造方法，则编译系统会自动插入一个无参数的默认构造器，这个构造器不执行任何代码。<br>  （5）构造方法可以重载，以参数的个数，类型，顺序。</p>
<ol>
<li><p>在创建子类的对象时，Java虚拟机首先执行父类的构造方法，然后再执行子类的构造方法。在多级继承的情况下，将从继承树的最上层的父类开始，依次执行各个类的构造方法，这可以保证子类对象从所有直接或间接父类中继承的实例变量都被正确地初始化。<br>super（）必须写在第一行。</p>
</li>
<li><p>链接：<a href="https://www.nowcoder.com/questionTerminal/2732166fc5aa4335ae0a4b2085da041c" target="_blank" rel="external">https://www.nowcoder.com/questionTerminal/2732166fc5aa4335ae0a4b2085da041c</a><br>来源：牛客网</p>
</li>
</ol>
<p>首先：<br>  成员方法又称为实例方法<br>  静态方法又称为类方法<br>  其次：<br>  a，静态方法中没有this指针<br>  c，可以通过类名作用域的方式调用Class::fun();<br>  d，太绝对化了，在类中申请一个类对象或者参数传递一个对象或者指针都可以调用;</p>
<ol>
<li>链接：<a href="https://www.nowcoder.com/questionTerminal/e515ae7a18924fe3b6952ae7fbb985bc" target="_blank" rel="external">https://www.nowcoder.com/questionTerminal/e515ae7a18924fe3b6952ae7fbb985bc</a><br>来源：牛客网</li>
</ol>
<p>1、因为ping的话 后面跟的是地址，所以要先将域名转换为ip地址，即用到了DNS<br>2、获取到ip地址后，在数据链路层是根据MAC地址传输的，所以要用到ARP解析服务，获取到MAC地址 </p>
<p>  3、ping功能是测试另一台主机是否可达，程序发送一份ICMP回显请求给目标主机，并等待返回ICMP回显应答，（ICMP主要是用于ip主机、路由器之间传递控制信息，控制信息是指网络通不通，主机是否科大）<br>  4、TCP的话，不涉及数据传输，不会用到</p>
<ol>
<li><p>n个人每个人都不站在原来的位置的方法数有:<br>f(n)=n!(1/2!-1/3!+1/4!+..+(-1)^n/n!)<br>此公式的推导过程要用到筛法公式,而且推导过程很复杂,除了竞赛高考肯定不会出现,对于n不大于4时可采用枚举法.一般只需记住n不大于5的情况即可<br>f(2)=1,f(3)=2,f(4)=9,f(5)=44<br>此外还有一个简单的公式f(n)={n!/e},{x}表示最接近x的整数,e为自然底数,其值为2.7182818,一般取2.72即可</p>
</li>
<li><p>StringBuilder线程不安全，StringBuffer线程安全效率差，Object+””创建了三个字符串</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;MySQL 添加列，修改列，删除列&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ALTER TABLE：添加，修改，删除表的列，约束等表的定义。&lt;/p&gt;
&lt;p&gt;查看列：desc 表名;&lt;br&gt;修改表名：alter table t_book rename to bbb;&lt;br&gt;添
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python itertools的使用</title>
    <link href="http://yoursite.com/2017/03/14/python-itertools/"/>
    <id>http://yoursite.com/2017/03/14/python-itertools/</id>
    <published>2017-03-14T14:00:22.000Z</published>
    <updated>2017-03-14T15:15:46.191Z</updated>
    
    <content type="html"><![CDATA[<p>最开始是遇到一个问题，如何在以<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">file = open(file_address, <span class="string">'w'</span>)</div></pre></td></tr></table></figure></p>
<p>的方法打开的文件中，跳过第一行读取，因为第一行可能是配置信息，或者csv文件的列头信息，需要跳过读取。<br>经过搜索找到了这样的<a href="http://blog.csdn.net/vernice/article/details/46501885" target="_blank" rel="external">方法</a>:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> itertools</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> itertools.islice(file, <span class="number">1</span>, <span class="keyword">None</span>):</div><div class="line">	<span class="keyword">pass</span></div></pre></td></tr></table></figure></p>
<p>测试有效。<br>python中的itertools模块内置一系列的迭代器创建函数，详细：<br><a href="http://www.cnblogs.com/cython/articles/2169009.html" target="_blank" rel="external">Python：itertools模块</a><br><a href="http://blog.csdn.net/xiaocaiju/article/details/6968123" target="_blank" rel="external">python itertools的使用</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最开始是遇到一个问题，如何在以&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;cod
    
    </summary>
    
    
      <category term="Q&amp;amp;A" scheme="http://yoursite.com/tags/Q-amp-A/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题yilia</title>
    <link href="http://yoursite.com/2017/03/14/theme-yilia/"/>
    <id>http://yoursite.com/2017/03/14/theme-yilia/</id>
    <published>2017-03-14T13:53:55.000Z</published>
    <updated>2017-03-14T13:59:49.473Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo主题yilia"><a href="#Hexo主题yilia" class="headerlink" title="Hexo主题yilia"></a><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">Hexo主题yilia</a></h3><p>喜欢这个主题的原因是头像框是圆形的，配我的头像很好看~（虽然可以改主题的css文件，不过太麻烦了）<br>yilia的缺点，或者说与其他主题不同是它没有catagory，不过用多个tag也可以解决，不算什么大事~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Hexo主题yilia&quot;&gt;&lt;a href=&quot;#Hexo主题yilia&quot; class=&quot;headerlink&quot; title=&quot;Hexo主题yilia&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; 
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>JAVA的Random类[转]</title>
    <link href="http://yoursite.com/2017/03/02/java-random/"/>
    <id>http://yoursite.com/2017/03/02/java-random/</id>
    <published>2017-03-02T14:41:12.000Z</published>
    <updated>2017-03-14T15:15:47.971Z</updated>
    
    <content type="html"><![CDATA[<p>转自<a href="http://www.cnblogs.com/Fskjb/archive/2009/08/29/1556417.html" target="_blank" rel="external">JAVA的Random类[转]</a></p>
<hr>
<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><ol>
<li><p>Random对象的生成</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Random r1 = <span class="keyword">new</span> Random();</div><div class="line">Random r2 = <span class="keyword">new</span> Random(<span class="number">10</span>);    <span class="comment">//参数表述种子数</span></div></pre></td></tr></table></figure>
</li>
<li><p>Random类常用方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">nextBoolean</span><span class="params">()</span>   <span class="comment">//生成一个随机的boolean值</span></span></div><div class="line"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">nextDouble</span><span class="params">()</span>     <span class="comment">//生成一个[0,1.0)之间的随机double值</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">nextInt</span><span class="params">()</span>           <span class="comment">//生成一个随机的int值</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">nextInt</span><span class="params">(<span class="keyword">int</span> n)</span>      <span class="comment">//生成一个[0,n)之间的随机int值</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSeed</span><span class="params">(<span class="keyword">long</span> seed)</span> <span class="comment">//重设种子数</span></div></pre></td></tr></table></figure>
</li>
</ol>
<hr>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>相同种子数的Random对象，相同次数生成的随机数字是完全相同的。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转自&lt;a href=&quot;http://www.cnblogs.com/Fskjb/archive/2009/08/29/1556417.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JAVA的Random类[转]&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="Q&amp;amp;A" scheme="http://yoursite.com/tags/Q-amp-A/"/>
    
  </entry>
  
  <entry>
    <title>第一篇文章</title>
    <link href="http://yoursite.com/2017/02/05/first/"/>
    <id>http://yoursite.com/2017/02/05/first/</id>
    <published>2017-02-05T14:15:32.000Z</published>
    <updated>2017-03-13T14:14:18.732Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo-Github-Pages搭建教程"><a href="#Hexo-Github-Pages搭建教程" class="headerlink" title="Hexo + Github Pages搭建教程"></a>Hexo + Github Pages搭建教程</h2><p><a href="http://jiji262.github.io/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="external">手把手教你使用Hexo + Github Pages搭建个人独立博客</a><br><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a><br><a href="http://www.pchou.info/ssgithubPage/2013-01-03-build-github-blog-page-01.html" target="_blank" rel="external">一步步在GitHub上创建博客主页</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo-Github-Pages搭建教程&quot;&gt;&lt;a href=&quot;#Hexo-Github-Pages搭建教程&quot; class=&quot;headerlink&quot; title=&quot;Hexo + Github Pages搭建教程&quot;&gt;&lt;/a&gt;Hexo + Github Pages搭建
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
